plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

private def loadLocalProperties() {
    Properties properties = new Properties()
    def localPropertiesFile = project.rootProject.file('local.properties')
    if(!localPropertiesFile.exists()){
        localPropertiesFile.createNewFile()
    }
    properties.load(localPropertiesFile.newDataInputStream())
    return properties
}

def properties = loadLocalProperties()

android {
    signingConfigs {
        release {
            if(!properties.getProperty("RELEASE_STORE_FILE", "").empty){
                storeFile file(properties.getProperty("RELEASE_STORE_FILE", ""))
                storePassword properties.getProperty("RELEASE_STORE_PASSWORD", "")
                keyAlias properties.getProperty("RELEASE_KEY_ALIAS", "")
                keyPassword properties.getProperty("RELEASE_KEY_PASSWORD", "")
            }
        }
    }

    namespace 'com.valterc.ki2'
    compileSdk 34

    defaultConfig {
        applicationId "com.valterc.ki2"
        minSdk 26
        targetSdk 34
		
        versionCode properties.getProperty("VERSION_CODE", "1") as int
        versionName properties.getProperty("VERSION_NAME", "0.1")
		
        archivesBaseName = "ki2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    lint {
        checkAllWarnings true
        enable 'deprecation'
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.all {
            useJUnitPlatform()
            reports {
                junitXml.required = true
                html.required = false
            }
            testLogging {
                events "passed", "skipped", "failed"
            }
        }
    }

    buildFeatures {
        aidl true
        buildConfig true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.0"
    }
}

dependencies {
    implementation 'androidx.glance:glance-preview:1.1.1'
    implementation 'androidx.glance:glance:1.1.1'
    implementation 'androidx.glance:glance-appwidget:1.1.1'
    implementation 'androidx.glance:glance-appwidget-preview:1.1.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'io.hammerhead:karoo-sdk:0.0.7'
    implementation 'io.hammerhead:karoo-ext:1.1.2'
    implementation files('libs/fit.jar')
    implementation files('libs/android_antlib_4-16-0.aar')
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.8.7'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}